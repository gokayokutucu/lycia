name: Publish NuGet

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '**/*.csproj'
      - '**/*.props'
      - '**/*.targets'
      - 'version.json'

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history + tags for NBGV)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x

      - name: Restore
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore

      - name: Run unit tests
        run: dotnet test tests/Lycia.Tests/Lycia.Tests.csproj -c Release --no-build --logger "trx;LogFileName=unit.trx"

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: '**/unit.trx'

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s --health-timeout 3s --health-retries 10
      rabbitmq:
        image: rabbitmq:3.13-management
        ports: ['5672:5672', '15672:15672']
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 5s --health-timeout 5s --health-retries 20

    steps:
      - name: Checkout (full history + tags for NBGV)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x

      - name: Restore
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore

      - name: Run integration tests
        env:
          LYCIA__EVENTBUS__CONNECTIONSTRING: amqp://guest:guest@127.0.0.1:5672/
          LYCIA__EVENTSTORE__CONNECTIONSTRING: 127.0.0.1:6379
        run: dotnet test tests/Lycia.IntegrationTests/Lycia.IntegrationTests.csproj -c Release --no-build --logger "trx;LogFileName=integration.trx"

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: '**/integration.trx'

  publish:
    name: Pack & Publish
    runs-on: ubuntu-latest
    needs: [tests, integration-tests]

    steps:
      - name: Checkout (full history + tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x

      - name: Clear NuGet caches
        run: dotnet nuget locals all --clear

      # (Optional) it creates a nuget.config for local feed and mapping
      - name: Create nuget.config with source mapping
        run: |
          cat > nuget.config <<'XML'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <packageSources>
              <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
              <add key="local" value="./artifacts/nupkgs" />
            </packageSources>
            <packageSourceMapping>
              <!-- Lycia isimli paket local'den çözülsün -->
              <packageSource key="local">
                <package pattern="Lycia" />
              </packageSource>
              <!-- Diğer her şey nuget.org -->
              <packageSource key="nuget.org">
                <package pattern="*" />
              </packageSource>
            </packageSourceMapping>
          </configuration>
          XML

      - name: Restore (solution)
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore /p:ContinuousIntegrationBuild=true

      - name: Show computed version (SemVer2)
        run: |
          dotnet tool install -g nbgv || true
          nbgv get-version -v SemVer2

      # ---- Pack + Push Lycia (Core) ----
      - name: Pack Lycia
        run: dotnet pack src/Lycia/Lycia.csproj -c Release -o artifacts/nupkgs /p:ContinuousIntegrationBuild=true --no-restore

      - name: Validate Lycia package contents
        run: |
          ls -la artifacts/nupkgs
          PKG=$(ls artifacts/nupkgs/Lycia.*.nupkg | sort -V | tail -n1)
          echo "Lycia nupkg: $PKG"
          unzip -l "$PKG" | sed -n '1,200p'

      - name: Push Lycia (nuget.org)
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push "artifacts/nupkgs/Lycia.*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "$NUGET_API_KEY" --skip-duplicate

      # ---- Compute Lycia floor (strip commit hash) ----
      - name: Compute Lycia min floor (strip commit hash)
        id: floor
        run: |
          LATEST=$(ls artifacts/nupkgs/Lycia.*.nupkg | sort -V | tail -n1)
          VER=${LATEST##*/Lycia.}
          VER=${VER%.nupkg}
          # '1.17.0-beta-0023-gxxxx' -> '1.17.0-beta-0023'
          FLOOR=$(echo "$VER" | sed -E 's/-g[0-9a-f]+$//')
          echo "Lycia floor: $FLOOR"
          echo "floor=$FLOOR" >> $GITHUB_OUTPUT

      # ---- Restore + Pack + Push Lycia.Extensions ----
      - name: Restore Extensions with floor (pack mode)
        run: |
          dotnet restore src/Lycia.Extensions/Lycia.Extensions.csproj \
            -p:UsePackageRefForLyciaOnPack=true \
            -p:LyciaMinVersion='${{ steps.floor.outputs.floor }}' \
            --source "./artifacts/nupkgs" --source "https://api.nuget.org/v3/index.json"

      - name: Pack Extensions (no restore)
        run: |
          dotnet pack src/Lycia.Extensions/Lycia.Extensions.csproj -c Release \
            -o artifacts/nupkgs \
            -p:ContinuousIntegrationBuild=true \
            -p:UsePackageRefForLyciaOnPack=true \
            -p:LyciaMinVersion='${{ steps.floor.outputs.floor }}' \
            --no-restore

      - name: Validate Lycia.Extensions package contents
        run: |
          PKG=$(ls artifacts/nupkgs/Lycia.Extensions.*.nupkg | sort -V | tail -n1)
          echo "Lycia.Extensions nupkg: $PKG"
          unzip -l "$PKG" | sed -n '1,200p'
          echo "NUSPEC dependencies (should only contain Lycia):"
          unzip -p "$PKG" *.nuspec | sed -n '1,200p'

      - name: Push Lycia.Extensions (nuget.org)
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push "artifacts/nupkgs/Lycia.Extensions.*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "$NUGET_API_KEY" --skip-duplicate
