name: Publish NuGet

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '**/*.csproj'
      - '**/*.props'
      - '**/*.targets'
      - 'version.json'

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history + tags for NBGV)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x

      - name: Restore
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore

      - name: Run unit tests
        run: dotnet test tests/Lycia.Tests/Lycia.Tests.csproj -c Release --no-build --logger "trx;LogFileName=unit.trx"

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: '**/unit.trx'

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s --health-timeout 3s --health-retries 10
      rabbitmq:
        image: rabbitmq:3.13-management
        ports: ['5672:5672', '15672:15672']
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 5s --health-timeout 5s --health-retries 20

    steps:
      - name: Checkout (full history + tags for NBGV)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x

      - name: Restore
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore

      # Ortam değişkenleri testlerin appsettings/Options'larında kullanılıyorsa:
      - name: Run integration tests
        env:
          LYCIA__EVENTBUS__CONNECTIONSTRING: amqp://guest:guest@127.0.0.1:5672/
          LYCIA__EVENTSTORE__CONNECTIONSTRING: 127.0.0.1:6379
        run: dotnet test tests/Lycia.IntegrationTests/Lycia.IntegrationTests.csproj -c Release --no-build --logger "trx;LogFileName=integration.trx"

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: '**/integration.trx'

  publish:
    name: Pack & Publish
    runs-on: ubuntu-latest
    needs: [tests, integration-tests]

    steps:
      - name: Checkout (full history + tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
            6.0.x
            
      - name: Clear NuGet caches (CI)
        run: dotnet nuget locals all --clear

      - name: Restore
        run: dotnet restore Lycia.sln

      - name: Build (Release)
        run: dotnet build Lycia.sln -c Release --no-restore

      - name: Show computed version (optional)
        run: |
          dotnet tool install -g nbgv || true
          nbgv get-version -v SemVer2

      # ---- Pack each public package explicitly ----
      - name: Pack Lycia (core)
        run: dotnet pack src/Lycia/Lycia.csproj -c Release -o ./nupkgs

      - name: Pack Lycia.Extensions
        run: dotnet pack src/Lycia.Extensions/Lycia.Extensions.csproj -c Release -o ./nupkgs

      # - name: Pack Lycia.Scheduling
      #   run: dotnet pack src/Lycia.Scheduling/Lycia.Scheduling.csproj -c Release -o ./nupkgs
      # - name: Pack Lycia.Extensions.Scheduling.Redis
      #   run: dotnet pack src/Lycia.Extensions.Scheduling.Redis/Lycia.Extensions.Scheduling.Redis.csproj -c Release -o ./nupkgs

      - name: Publish to NuGet.org
        run: dotnet nuget push "nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "${{ secrets.NUGET_API_KEY }}" --skip-duplicate